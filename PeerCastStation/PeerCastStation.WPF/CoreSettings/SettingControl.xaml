<!-- PeerCastStation, a P2P streaming servent.
Copyright (C) 2013 PROGRE (djyayutto@gmail.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>. -->
<UserControl x:Class="PeerCastStation.WPF.CoreSettings.SettingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:l="clr-namespace:PeerCastStation.WPF.CoreSettings"
             xmlns:peca="clr-namespace:PeerCastStation.WPF"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="400">
  <Grid>
    <Grid.Resources>
      <BooleanToVisibilityConverter x:Key="visibilityConverter"/>
      <Style TargetType="ComboBox">
        <Style.Triggers>
          <Trigger Property="Validation.HasError" Value="true">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="TextBox">
        <Style.Triggers>
          <Trigger Property="Validation.HasError" Value="true">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="8,2,8,2"/>
      </Style>
      <Style x:Key="PortCheckButton" TargetType="Button">
        <Style.Triggers>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Checking}">
            <Setter Property="IsEnabled" Value="False"/>
          </DataTrigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="8,2,8,2"/>
      </Style>
      <Style x:Key="PortCheckStatusText" TargetType="TextBlock">
        <Style.Triggers>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Unknown}">
            <Setter Property="Text" Value="IPv4: 未確認"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Checking}">
            <Setter Property="Text" Value="IPv4: 確認しています"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Opened}">
            <Setter Property="Text" Value="IPv4: 開放されています"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Closed}">
            <Setter Property="Text" Value="IPv4: 未開放です"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckStatus}" Value="{x:Static l:PortCheckStatus.Failed}">
            <Setter Property="Text" Value="IPv4: 確認失敗しました"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="PortCheckV6StatusText" TargetType="TextBlock">
        <Style.Triggers>
          <DataTrigger Binding="{Binding PortCheckV6Status}" Value="{x:Static l:PortCheckStatus.Unknown}">
            <Setter Property="Text" Value="IPv6: 未確認"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckV6Status}" Value="{x:Static l:PortCheckStatus.Checking}">
            <Setter Property="Text" Value="IPv6: 確認しています"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckV6Status}" Value="{x:Static l:PortCheckStatus.Opened}">
            <Setter Property="Text" Value="IPv6: 開放されています"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckV6Status}" Value="{x:Static l:PortCheckStatus.Closed}">
            <Setter Property="Text" Value="IPv6: 未開放です"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding PortCheckV6Status}" Value="{x:Static l:PortCheckStatus.Failed}">
            <Setter Property="Text" Value="IPv6: 確認失敗しました"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="PortIsOpenText" TargetType="TextBlock">
        <Style.Triggers>
          <DataTrigger Binding="{Binding IsOpen}" Value="{x:Null}">
            <Setter Property="Text" Value="未確認"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding IsOpen}" Value="True">
            <Setter Property="Text" Value="開放されています"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding IsOpen}" Value="False">
            <Setter Property="Text" Value="未開放です"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <TabControl TabStripPlacement="Left" Grid.Column="0" Grid.Row="0" Margin="4" SelectedIndex="0">
      <TabItem Header="全般">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <StackPanel Grid.IsSharedSizeScope="True">
            <GroupBox Header="接続待ち受け">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="ポート番号:"/>
                <Grid Grid.Column="1" Grid.Row="0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <peca:IntegerUpDown Minimum="1024" Maximum="65535" Increment="1" Value="{Binding PrimaryPort}"/>
                  <CheckBox Grid.Column="1" Margin="2" VerticalAlignment="Center" Content="IPv6も使う" IsChecked="{Binding IPv6Enabled}"/>
                </Grid>
                <Label     Grid.Column="0" Grid.Row="1" Content="ポート自動開放:"/>
                <CheckBox  Grid.Column="1" Grid.Row="1" Content="自動開放する(UPnP/NAT-PMP)" VerticalAlignment="Center" IsChecked="{Binding PortMapperEnabled}"/>
                <Label     Grid.Column="0" Grid.Row="2" Content="外部アドレス:"/>
                <StackPanel Grid.Column="1" Grid.Row="2">
                  <TextBlock TextWrapping="Wrap">
                    <TextBlock.Style>
                      <Style TargetType="TextBlock">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding PortMapperExternalAddresses}" Value="">
                            <Setter Property="Text" Value="ルーター未発見"/>
                          </DataTrigger>
                          <DataTrigger Binding="{Binding PortMapperEnabled}" Value="false">
                            <Setter Property="Text" Value="UPnP無効"/>
                          </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Text" Value="{Binding PortMapperExternalAddresses}"/>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                  <TextBlock TextWrapping="Wrap">
                    <TextBlock.Style>
                      <Style TargetType="TextBlock">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding ExternalAddressesV6}" Value="">
                            <Setter Property="Text" Value="IPv6グローバルアドレス無し"/>
                          </DataTrigger>
                          <DataTrigger Binding="{Binding IPv6Enabled}" Value="false">
                            <Setter Property="Text" Value="IPv6無効"/>
                          </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Text" Value="{Binding ExternalAddressesV6}"/>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                </StackPanel>

                <Label Grid.Column="0" Grid.Row="3" Content="ポート開放状態:"/>
                <Grid  Grid.Column="1" Grid.Row="3">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Style="{StaticResource PortCheckStatusText}"/>
                  <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" Style="{StaticResource PortCheckV6StatusText}"/>
                  <Button    Grid.Column="1" Grid.RowSpan="2" Content="開放確認" Click="PortCheckButton_Click" Style="{StaticResource PortCheckButton}"/>
                </Grid>

                <Label Grid.Column="0" Grid.Row="4" Content="外からアクセス:"/>
                <Grid Grid.Column="1" Grid.Row="4">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <CheckBox Grid.Column="0" Grid.Row="0" Margin="2" VerticalAlignment="Center" Content="視聴" IsChecked="{Binding GlobalPlayUIAccessEnabled}"/>
                  <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" Margin="2">
                    <peca:UrlLink Margin="4,0" Text="視聴専用ページURL" Url="{Binding PlayUIUrlIPv4}" Visibility="{Binding PlayUIUrlIPv4Visibility}"/> 
                    <peca:UrlLink Margin="4,0" Text="視聴専用ページURL(IPv6)" Url="{Binding PlayUIUrlIPv6}" Visibility="{Binding PlayUIUrlIPv6Visibility}"/> 
                  </StackPanel>
                  <CheckBox Grid.Column="0"  Grid.Row="1" Margin="2" VerticalAlignment="Center" Content="操作" IsChecked="{Binding GlobalHtmlUIAccessEnabled}"/>
                  <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="2">
                    <peca:UrlLink Margin="4,0" Text="操作用ページURL" Url="{Binding HtmlUIUrlIPv4}" Visibility="{Binding HtmlUIUrlIPv4Visibility}"/> 
                    <peca:UrlLink Margin="4,0" Text="操作用ページURL(IPv6)" Url="{Binding HtmlUIUrlIPv6}" Visibility="{Binding HtmlUIUrlIPv6Visibility}"/> 
                  </StackPanel>
                </Grid>
              </Grid>
            </GroupBox>
            <GroupBox Header="最大上り帯域">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label              Grid.Column="0" Grid.Row="0" Content="合計(IPv4):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="0" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRate}"/>
                <Label              Grid.Column="2" Grid.Row="0" Content="kbps"/>
                <Button             Grid.Column="3" Grid.Row="0" Content="自動設定" Click="BandwidthCheckButton_Click"/>

                <Label              Grid.Column="0" Grid.Row="1" Content="合計(IPv6):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="1" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRateIPv6}"/>
                <Label              Grid.Column="2" Grid.Row="1" Content="kbps"/>
                <Button             Grid.Column="3" Grid.Row="1" Content="自動設定" Click="BandwidthCheckButtonIPv6_Click"/>

                <Label              Grid.Column="0" Grid.Row="2" Content="チャンネル毎:"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="2" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRatePerRelayChannel}" MinimumText="制限無し"/>
                <Label              Grid.Column="2" Grid.Row="2" Content="kbps"/>
              </Grid>
            </GroupBox>
            <GroupBox Header="チャンネル自動切断">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox           Grid.Column="0" ItemsSource="{Binding ChannelCleanupModeItems}" DisplayMemberPath="Name" SelectedValuePath="Mode" IsEditable="False" SelectedValue="{Binding ChannelCleanupMode}"/>
                <TextBlock          Grid.Column="1" Margin="2" Text="状態が" VerticalAlignment="Center"/>
                <peca:IntegerUpDown Grid.Column="2" Minimum="0" Value="{Binding ChannelCleanupInactiveLimit}" MinimumText="切断しない"/>
                <TextBlock          Grid.Column="3" Margin="2" Text="分継続すると切断" VerticalAlignment="Center"/>
              </Grid>
            </GroupBox>
          </StackPanel>
        </ScrollViewer>
      </TabItem>
      <TabItem Header="接続待ち受け" Visibility="{Binding ElementName=advancedSettings, Path=IsChecked, Converter={StaticResource visibilityConverter}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <ListBox Grid.Row="0" Margin="2" ItemsSource="{Binding Ports}" SelectedItem="{Binding SelectedPort}" HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="False">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Label    Grid.Row="0" Grid.Column="0" Content="アドレス:"/>
                  <ComboBox Grid.Row="0" Grid.Column="1" IsEditable="True">
                    <ComboBox.Text>
                      <Binding Path="Address" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                          <l:BindableAddressValidationRule />
                        </Binding.ValidationRules>
                      </Binding>
                    </ComboBox.Text>
                    <ComboBoxItem Content="IPv4 Any"/>
                    <ComboBoxItem Content="IPv6 Any"/>
                  </ComboBox>
                  <Label Grid.Row="0" Grid.Column="2" Content="ポート:"/>
                  <peca:IntegerUpDown    Grid.Row="0" Grid.Column="3" Minimum="1024" Maximum="65535" Value="{Binding Port}"/>
                  <l:RelaySettingControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4"/>
                  <Label Grid.Column="0" Grid.Row="2" Content="ポート開放状態:"/>
                  <TextBlock Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Center" Style="{StaticResource PortIsOpenText}"/>
                </Grid>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
          <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Button Content="追加" Command="{Binding AddPortCommand}"/>
            <Button Content="削除" Command="{Binding RemovePortCommand}"/>
          </StackPanel>
          <Grid Grid.Row="2">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label    Grid.Column="0" Grid.Row="0" Content="ポート自動開放:"/>
            <CheckBox Grid.Column="1" Grid.Row="0" Content="自動開放する(UPnP/NAT-PMP)" VerticalAlignment="Center" IsChecked="{Binding PortMapperEnabled}"/>
            <Label     Grid.Column="0" Grid.Row="1" Content="外部アドレス:"/>
            <StackPanel Grid.Column="1" Grid.Row="1">
              <TextBlock Margin="2" TextWrapping="Wrap">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding PortMapperExternalAddresses}" Value="">
                        <Setter Property="Text" Value="ルーター未発見"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding PortMapperEnabled}" Value="false">
                        <Setter Property="Text" Value="UPnP無効"/>
                      </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Text" Value="{Binding PortMapperExternalAddresses}"/>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
              <TextBlock Margin="2" TextWrapping="Wrap">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding ExternalAddressesV6}" Value="">
                        <Setter Property="Text" Value="IPv6グローバルアドレス無し"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding IPv6Enabled}" Value="false">
                        <Setter Property="Text" Value="IPv6無効"/>
                      </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Text" Value="{Binding ExternalAddressesV6}"/>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </StackPanel>
            <Label    Grid.Column="0" Grid.Row="2" Content="ポート開放確認:"/>
            <Grid     Grid.Column="1" Grid.Row="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Style="{StaticResource PortCheckStatusText}"/>
              <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" Style="{StaticResource PortCheckV6StatusText}"/>
              <Button    Grid.Column="1" Grid.RowSpan="2" Content="開放確認" Click="PortCheckButton_Click" Style="{StaticResource PortCheckButton}"/>
            </Grid>
          </Grid>
        </Grid>
      </TabItem>
      <TabItem Header="接続設定" Visibility="{Binding ElementName=advancedSettings, Path=IsChecked, Converter={StaticResource visibilityConverter}}">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <StackPanel>
            <GroupBox Header="最大リレー数">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label              Grid.Column="0" Grid.Row="0" Content="合計:"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="0" Minimum="0" Value="{Binding MaxRelays}" MinimumText="制限無し"/>

                <Label              Grid.Column="0" Grid.Row="1" Content="チャンネル毎(配信時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="1" Minimum="0" Value="{Binding MaxRelaysPerBroadcastChannel}" MinimumText="制限無し"/>

                <Label              Grid.Column="0" Grid.Row="2" Content="チャンネル毎(視聴時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="2" Minimum="0" Value="{Binding MaxRelaysPerRelayChannel}" MinimumText="制限無し"/>
              </Grid>
            </GroupBox>
            <GroupBox Header="最大視聴数">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label              Grid.Column="0" Grid.Row="0" Content="合計:"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="0" Minimum="0" Value="{Binding MaxPlays}" MinimumText="制限無し"/>

                <Label              Grid.Column="0" Grid.Row="1" Content="チャンネル毎(配信時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="1" Minimum="0" Value="{Binding MaxPlaysPerBroadcastChannel}" MinimumText="制限無し"/>

                <Label              Grid.Column="0" Grid.Row="2" Content="チャンネル毎(視聴時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="2" Minimum="0" Value="{Binding MaxPlaysPerRelayChannel}" MinimumText="制限無し"/>
              </Grid>
            </GroupBox>
            <GroupBox Header="最大上り帯域">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label              Grid.Column="0" Grid.Row="0" Content="合計(IPv4):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="0" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRate}"/>
                <Label              Grid.Column="2" Grid.Row="0" Content="kbps"/>
                <Button             Grid.Column="3" Grid.Row="0" Content="自動設定" Click="BandwidthCheckButton_Click"/>

                <Label              Grid.Column="0" Grid.Row="1" Content="合計(IPv6):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="1" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRateIPv6}"/>
                <Label              Grid.Column="2" Grid.Row="1" Content="kbps"/>
                <Button             Grid.Column="3" Grid.Row="1" Content="自動設定" Click="BandwidthCheckButtonIPv6_Click"/>

                <Label              Grid.Column="0" Grid.Row="2" Content="チャンネル毎(配信時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="2" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRatePerBroadcastChannel}" MinimumText="制限無し"/>
                <Label              Grid.Column="2" Grid.Row="2" Content="kbps"/>

                <Label              Grid.Column="0" Grid.Row="3" Content="チャンネル毎(視聴時):"/>
                <peca:IntegerUpDown Grid.Column="1" Grid.Row="3" Minimum="0" Increment="100" Value="{Binding MaxUpstreamRatePerRelayChannel}" MinimumText="制限無し"/>
                <Label              Grid.Column="2" Grid.Row="3" Content="kbps"/>
              </Grid>
            </GroupBox>
            <GroupBox Header="チャンネルの自動切断">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox           Grid.Column="0" ItemsSource="{Binding ChannelCleanupModeItems}" DisplayMemberPath="Name" SelectedValuePath="Mode" IsEditable="False" SelectedValue="{Binding ChannelCleanupMode}"/>
                <TextBlock          Grid.Column="1" Margin="2" Text="が" VerticalAlignment="Center"/>
                <peca:IntegerUpDown Grid.Column="2" Minimum="0" Value="{Binding ChannelCleanupInactiveLimit}" MinimumText="切断しない"/>
                <TextBlock          Grid.Column="3" Margin="2" Text="分継続すると切断" VerticalAlignment="Center"/>
              </Grid>
            </GroupBox>
          </StackPanel>
        </ScrollViewer>
      </TabItem>
      <TabItem Header="イエローページ">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <ListBox Grid.Row="0" ItemsSource="{Binding YellowPages}" SelectedItem="{Binding SelectedYellowPage}" Margin="2" HorizontalContentAlignment="Stretch">
            <ListBox.Template>
              <ControlTemplate TargetType="ListBox">
                <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="1" >
                  <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" CanContentScroll="False">
                    <StackPanel Grid.IsSharedSizeScope="True">
                      <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderThickness="1" >
                        <Grid Margin="3">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Name" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="AnnounceUri"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ChannelsUri"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <Line         Grid.Column="0" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" X1="1" X2="1" Y1="1" Y2="15" StrokeThickness="1" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                          <TextBlock    Grid.Column="1" Margin="2">YellowPage名</TextBlock>
                          <Line         Grid.Column="2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" X1="1" X2="1" Y1="1" Y2="15" StrokeThickness="1" VerticalAlignment="Center"/>
                          <GridSplitter Grid.Column="2" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent"/>
                          <TextBlock    Grid.Column="3" Margin="2">プロトコル</TextBlock>
                          <Line         Grid.Column="4" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" X1="1" X2="1" Y1="1" Y2="15" StrokeThickness="1" VerticalAlignment="Center"/>
                          <GridSplitter Grid.Column="4" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent"/>
                          <TextBlock    Grid.Column="5" Margin="2">掲載用URL</TextBlock>
                          <Line         Grid.Column="6" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" X1="1" X2="1" Y1="1" Y2="15" StrokeThickness="1" VerticalAlignment="Center"/>
                          <GridSplitter Grid.Column="6" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent"/>
                          <TextBlock    Grid.Column="7" Margin="2">チャンネル一覧URL</TextBlock>
                          <Line         Grid.Column="8" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" X1="1" X2="1" Y1="1" Y2="15" StrokeThickness="1" VerticalAlignment="Center"/>
                          <GridSplitter Grid.Column="8" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent"/>
                        </Grid>
                      </Border>
                      <StackPanel IsItemsHost="True"/>
                    </StackPanel>
                  </ScrollViewer>
                </Border>
              </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemTemplate>
              <DataTemplate>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Name" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="AnnounceUri"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ChannelsUri"/>
                  </Grid.ColumnDefinitions>
                  <TextBox  Grid.Column="1" Text="{Binding Name}"/>
                  <ComboBox Grid.Column="2" SelectedItem="{Binding Protocol}" ItemsSource="{Binding Protocols}" DisplayMemberPath="Name"/>
                  <TextBox  Grid.Column="3" Text="{Binding Path=AnnounceUri,ValidatesOnExceptions=True,NotifyOnValidationError=True}" InputScope="Url"/>
                  <TextBox  Grid.Column="4" Text="{Binding Path=ChannelsUri,ValidatesOnExceptions=True,NotifyOnValidationError=True}" InputScope="Url"/>
                </Grid>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
          <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Content="追加" Command="{Binding AddYellowPageCommand}"/>
            <Button Content="削除" Command="{Binding RemoveYellowPageCommand}"/>
          </StackPanel>
        </Grid>
      </TabItem>
      <TabItem Header="UI設定">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <Grid Margin="3">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label    Grid.Column="0" Grid.Row="0" Content="ウィンドウタイトル"/>
            <ComboBox Grid.Column="1" Grid.Row="0" Margin="2" ItemsSource="{Binding WindowTitleModeNameItems}" DisplayMemberPath="Name" SelectedValuePath="Value" IsEditable="False" SelectedValue="{Binding WindowTitleMode}"/>
            <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="2" Content="起動時にウィンドウを表示する" IsChecked="{Binding IsShowWindowOnStartup}"/>
            <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Margin="2" Content="通知を表示する" IsChecked="{Binding IsShowNotifications}"/>
            <Label    Grid.Column="0" Grid.Row="3" Content="接続先表示:"/>
            <ComboBox Grid.Column="1" Grid.Row="3" Margin="2" ItemsSource="{Binding RemoteNodeNameItems}" DisplayMemberPath="Name" SelectedValuePath="Value" IsEditable="False" SelectedValue="{Binding RemoteNodeName}"/>
            <Label    Grid.Column="0" Grid.Row="4" Content="視聴方法:"/>
            <Grid Grid.Column="1" Grid.Row="4">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Label Grid.Column="0" Grid.Row="0" Content="FLV:"/>
              <ComboBox Grid.Column="1" Grid.Row="0" Margin="2" ItemsSource="{Binding PlayProtocols[FLV]}" DisplayMemberPath="Name" SelectedValuePath="Value" IsEditable="False" SelectedValue="{Binding DefaultPlayProtocols[FLV]}"/>
            </Grid>
          </Grid>
        </ScrollViewer>
      </TabItem>
    </TabControl>
    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1">
      <RadioButton                           Content="簡単設定" Margin="4,2,4,2" IsChecked="True"/>
      <RadioButton x:Name="advancedSettings" Content="詳細設定" Margin="4,2,4,2"/>
    </StackPanel>
  </Grid>
</UserControl>
